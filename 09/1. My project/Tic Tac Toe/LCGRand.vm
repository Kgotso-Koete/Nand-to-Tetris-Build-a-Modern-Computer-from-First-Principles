function LCGRand.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push constant 219
pop static 0
push constant 32749
pop static 1
push static 1
push static 0
call Math.divide 2
pop static 2
push static 1
push static 0
call LCGRand.mod 2
pop static 3
push pointer 0
push constant 0
call LCGRand.setSeed 2
pop temp 0
push pointer 0
return
function LCGRand.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function LCGRand.setSeed 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push this 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop this 0
label IF_FALSE0
push constant 0
return
function LCGRand.rand 1
push argument 0
pop pointer 0
push static 0
push this 0
push static 2
call LCGRand.mod 2
call Math.multiply 2
push static 3
push this 0
push static 2
call Math.divide 2
call Math.multiply 2
sub
pop local 0
push local 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push static 1
add
pop this 0
goto IF_END0
label IF_FALSE0
push local 0
pop this 0
label IF_END0
push this 0
return
function LCGRand.randRange 2
push argument 0
pop pointer 0
push static 1
push argument 2
push argument 1
sub
push constant 1
add
call Math.divide 2
pop local 0
push pointer 0
call LCGRand.rand 1
push local 0
call Math.divide 2
push argument 1
add
pop local 1
label WHILE_EXP0
push local 1
push argument 2
gt
not
if-goto WHILE_END0
push pointer 0
call LCGRand.rand 1
push local 0
call Math.divide 2
push argument 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 1
return
function LCGRand.mod 2
push argument 0
push argument 1
call Math.divide 2
pop local 0
push argument 0
push argument 1
push local 0
call Math.multiply 2
sub
pop local 1
push local 1
return

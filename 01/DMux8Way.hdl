// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
    // first choose layer 1: A-D vs E-H stream
    DMux(in = in, sel = sel[2], a = AtoDstream, b = EtoHstream);

    // Split layer 1 into layer 2: A-D stream becomes AB cs CD stream
    DMux(in = AtoDstream, sel = sel[1], a = ABstream, b = CDstream);
    // Split layer 1 into layer 2: A-D stream becomes AB cs CD stream
    DMux(in = EtoHstream, sel = sel[1], a = EFstream, b = GHstream); 

    // stream either a 0 or a 1 to the ab or cd stream
    DMux(in = ABstream, sel = sel[0], a = a, b = b);        
    DMux(in = CDstream, sel = sel[0], a = c, b = d);   
    DMux(in = EFstream, sel = sel[0], a = e, b = f);        
    DMux(in = GHstream, sel = sel[0], a = g, b = h); 


    
}